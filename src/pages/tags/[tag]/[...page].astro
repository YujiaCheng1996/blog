---
import type { CollectionEntry } from "astro:content";
import Pagination from "@/components/Paginator.astro";
import PostPreview from "@/components/blog/PostPreview.astro";
import { getAllPosts, getUniqueTags } from "@/data/post";
import PageLayout from "@/layouts/Base.astro";
import { collectionDateSort } from "@/utils/date";
import type { GetStaticPaths, Page } from "astro";

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
	const allPosts = await getAllPosts();
	const sortedPosts = allPosts.sort(collectionDateSort);
	const uniqueTags = getUniqueTags(sortedPosts);

	return uniqueTags.flatMap((tag) => {
		const filterPosts = sortedPosts.filter((post) => post.data.tags.includes(tag));
		return paginate(filterPosts, {
			pageSize: 10,
			params: { tag },
		});
	});
};

interface Props {
	page: Page<CollectionEntry<"post">>;
}

const { page } = Astro.props;
const { tag } = Astro.params;

const meta = {
	description: `查看 ${tag} 标签下所有博文`,
	title: `标签: ${tag}`,
};

const paginationProps = {
	...(page.url.prev && {
		prevUrl: {
			text: `← 上一个标签`,
			url: page.url.prev,
		},
	}),
	...(page.url.next && {
		nextUrl: {
			text: `下一个标签 →`,
			url: page.url.next,
		},
	}),
};
---

<PageLayout meta={meta}>
	<div class="mb-6 flex items-center">
		<h1 class="sr-only">{tag} 标签下所有博文</h1>
		<a class="title text-accent" href="/tags/">全部标签</a>
		<span aria-hidden="true" class="ms-2 me-3 text-xl">→</span>
		<span aria-hidden="true" class="text-xl">#{tag}</span>
	</div>
	<section aria-labelledby={`tags-${tag}`}>
		<h2 id={`tags-${tag}`} class="sr-only">博文列表</h2>
		<ul class="space-y-6">
			{
				page.data.map((p) => (
					<li class="grid gap-2 sm:grid-cols-[auto_1fr]">
						<PostPreview as="h2" post={p} />
					</li>
				))
			}
		</ul>
		<Pagination {...paginationProps} />
	</section>
</PageLayout>
